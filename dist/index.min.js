const ORG="not-a-cdn",output=document.getElementById("output"),backBtn=document.getElementById("backBtn");let historyStack=[];function goBack(){if(historyStack.length>0){historyStack.pop()()}0===historyStack.length&&(backBtn.style.display="none")}function clear(){output.textContent=""}function line(t,e=null){const n=document.createElement("div");n.textContent=t,e&&(n.style.cursor="pointer"),e&&(n.onclick=e),output.appendChild(n)}async function showRaw(t,e){clear(),backBtn.style.display="block",historyStack.push(()=>loadFolder(currentRepo,currentPath)),line("- "+e+"\n");line(await fetch(t).then(t=>t.text()).catch(()=>"Error loading file."))}let currentRepo="",currentPath="";async function loadFolder(t,e=""){currentRepo=t,currentPath=e,clear(),backBtn.style.display=historyStack.length?"block":"none";const n=e?e+"/":"";line("/"+t+(e?"/"+e:"")+"\n");const o=`https://api.github.com/repos/${ORG}/${t}/contents/${e}`,a=await fetch(o),c=await a.json();for(const o of c)"dir"===o.type?line("- "+n+o.name+"/",()=>{historyStack.push(()=>loadFolder(t,e)),loadFolder(t,n+o.name)}):"file"===o.type&&line("- "+n+o.name,()=>{historyStack.push(()=>loadFolder(t,e)),showRaw(o.download_url,n+o.name)})}async function listRepos(){clear(),backBtn.style.display="none";const t=await fetch(`https://api.github.com/orgs/${ORG}/repos?per_page=100&sort=updated`),e=await t.json();line(ORG+" GitHub Repositories\n"),e.forEach(t=>{line("- "+t.name+(t.description?" â€” "+t.description:""),()=>{historyStack.push(listRepos),loadFolder(t.name)})})}listRepos();